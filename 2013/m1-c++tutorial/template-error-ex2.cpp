/*
  Example of a more obscure template error message due to incomplete
  forward-declarations of the std::string type.  This one can be quite
  a headache to track down, but it is simply due to the fact that you
  need to #include <string>.
  
  While the error message generated by clang++ is more useful than the
  one produced by g++, it still isn't easy to find out that the
  problem comes from an incompletely defined std::string.
*/

// #include <string>
#include <vector>


template<typename value_t>
class Example {
public:
  value_t cumulate (value_t val)
  {
    if (values_.empty ()) {
      values_.push_back (val);
      return val;
    }
    values_.push_back (val + values_.back ());
    return values_.back ();
  }
  
private:
  std::vector<value_t> values_;
};


int main ()
{
  Example<int> foo;
  foo.cumulate(17);
  
  Example<std::string> bar;
  bar.cumulate("beer");
}
